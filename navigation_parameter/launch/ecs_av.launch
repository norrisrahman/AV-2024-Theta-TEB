<launch>

    <!--  ************** Global Parameters ***************  -->
    <param name="use_sim_time" value="true"/>
    <arg name="controller"  default="mpc" doc="opt: dwa, mpc, pure_pursuit"/> 
    <arg name="model"  default="ackermann" doc="opt: serving_bot, ackermann"/>  
    <arg name="tf_prefix"  default=""/> 

    <!--  ************** GAZEBO Simulator ***************  -->
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="-1.507"/>
    <arg name="gui" default="true"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find navigation_parameter)/worlds/map.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <!-- <env name="GAZEBO_MODEL_PATH" value="$(find mpc_ros)/map/custom" />  -->
    </include>

        <!-- Load ros_control controller configuration parameters -->
    <rosparam file="$(find mpc_ros_description)/config/ctrl_ackermann_steering_controller.yaml" command="load" />
    <rosparam file="$(find mpc_ros_description)/config/ctrl_gains.yaml" command="load"/>
    <rosparam file="$(find mpc_ros_description)/config/ctrl_joint_state_publisher.yaml" command="load" />
    <rosparam file="$(find mpc_ros_description)/config/ctrl_steer_bot_hardware_gazebo.yaml" command="load"/>

    <!--  ************** Robot model ***************  -->
    <param name="robot_description" command="$(find xacro)/xacro $(find servingbot_description)/urdf/servingbot.urdf.xacro" if="$(eval model == 'serving_bot')"/>
    <param name="robot_description" command="$(find xacro)/xacro $(find mpc_ros_description)/urdf/ackermann/ackermann.urdf.xacro" if="$(eval model == 'ackermann')"/>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model servingbot -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -param robot_description" if="$(eval model == 'serving_bot')"/>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model ackermann_bot -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -param robot_description" if="$(eval model == 'ackermann')"/>
      
      
    <!-- Spawn the controllers -->
    <node pkg="controller_manager" type="spawner" name="controller_spawner" args="joint_state_publisher ackermann_steering_controller" output="screen" respawn="false" if="$(eval model == 'ackermann')"/>

    <node name="diff_to_ackermann" pkg="mpc_ros" type="diff_to_ackermann" output="screen" if="$(eval model == 'ackermann')"/>


    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="50.0" />
    </node>




    <!--  ************** Map **************  -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find navigation_parameter)/map/map.yaml" output="screen">
        <param name="frame_id" value="map"/>
    </node>


    <!--  ************** Localization **************  -->
    
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <rosparam file="$(find navigation_parameter)/params/amcl_params.yaml" command="load" />
        <param name="initial_pose_x"            value="$(arg x_pos)"/>
        <param name="initial_pose_y"            value="$(arg y_pos)"/>
        <param name="initial_pose_a"            value="$(arg yaw)"/>
    </node>

    <!--  ************** Navigation ***************  -->    
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find navigation_parameter)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find navigation_parameter)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find navigation_parameter)/params/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find navigation_parameter)/params/global_costmap_params.yaml" command="load" />    
        <rosparam file="$(find navigation_parameter)/params/teb_local_planner_params.yaml" command="load" />
        
        <!-- Global Planner -->
        <!-- <param name="base_global_planner" value="global_planner/GlobalPlanner" />
        <param name="planner_frequency" value="1.0" />
        <param name="planner_frequency" value="0.0" if="$(eval controller == 'pure_pursuit')"/>
        <param name="planner_patience" value="5.0" />
        <rosparam file="$(find mpc_ros)/params/global_planner_params.yaml" command="load" /> -->

        <param name="base_global_planner" value="thetastar_planner/ThetastarPlanner"/>
        
        <!-- Local Planner -->
        <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
        <param name="controller_frequency" value="10.0" />    


        <param name="clearing_rotation_allowed" value="false" />
        <!-- MOVE BASE -->
        <param name="controller_patience" value="15.0" />
        <param name="controller_frequency" value="10.0" />
        <param name="max_planning_retries" value="10" />
        <param name="oscillation_timeout" value="10.0" />
        <param name="clearing_rotation_allowed" value="true" />

        <!-- Controller Node -->
        <remap from="/cmd_vel" to="/move_base/cmd_vel"/> 

        
        <!-- external controller >
        <remap from="/cmd_vel" to="/fake_cmd" unless="$(eval controller == 'dwa')"/-->
        <!-- <remap from="/cmd_vel" to="/ackermann_steering_controller/cmd_vel" if="$(eval model == 'ackermann')"/>
        <remap from="/odom" to="/ackermann_steering_controller/odom" if="$(eval model == 'ackermann')"/> -->
    </node>
    

    <!--  ************** Visualisation **************  -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find navigation_parameter)/params/total_rviz_navigation.rviz"/>
</launch>
